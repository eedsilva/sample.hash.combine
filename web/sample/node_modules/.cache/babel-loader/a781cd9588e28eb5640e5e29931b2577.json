{"ast":null,"code":"import _classCallCheck from \"/Users/hotmdev2/Documents/projects/telos/sample/web/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hotmdev2/Documents/projects/telos/sample/web/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport ScatterJS from \"scatterjs-core\";\nimport ScatterEOS from \"scatterjs-plugin-eosjs2\";\nimport { Api, JsonRpc } from \"eosjs\";\n\nvar ScatterBridge =\n/*#__PURE__*/\nfunction () {\n  function ScatterBridge(network) {\n    _classCallCheck(this, ScatterBridge);\n\n    ScatterJS.plugins(new ScatterEOS());\n    this.scatter = ScatterJS.scatter;\n    this.network = network;\n    var rpc = new JsonRpc(\"\".concat(network.protocol, \"://\").concat(network.host, \":\").concat(network.port));\n    this.currentAccount = null;\n    this.reqFields = {\n      accounts: [network]\n    };\n    this.eosApi = this.scatter.eos(network, Api, {\n      rpc: rpc\n    });\n  }\n\n  _createClass(ScatterBridge, [{\n    key: \"getIdentity\",\n    value: function getIdentity() {\n      var _this = this;\n\n      this.scatter.getIdentity(this.reqFields).then(function () {\n        _this.currentAccount = _this.scatter.identity.accounts.find(function (x) {\n          return x.blockchain === \"eos\";\n        });\n      }).catch(function (error) {\n        console.error(\"ERROR:\", error);\n      });\n    }\n  }]);\n\n  return ScatterBridge;\n}();\n\nexport { ScatterBridge as default };\n\nScatterBridge.prototype.connect = function () {\n  return \"test\";\n};","map":{"version":3,"sources":["/Users/hotmdev2/Documents/projects/telos/sample/web/app/src/scatterBrigde.js"],"names":["ScatterJS","ScatterEOS","Api","JsonRpc","ScatterBridge","network","plugins","scatter","rpc","protocol","host","port","currentAccount","reqFields","accounts","eosApi","eos","getIdentity","then","identity","find","x","blockchain","catch","error","console","prototype","connect"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,gBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,GAAT,EAAcC,OAAd,QAA6B,OAA7B;;IAEqBC,a;;;AACnB,yBAAYC,OAAZ,EAAqB;AAAA;;AACnBL,IAAAA,SAAS,CAACM,OAAV,CAAkB,IAAIL,UAAJ,EAAlB;AACA,SAAKM,OAAL,GAAeP,SAAS,CAACO,OAAzB;AACA,SAAKF,OAAL,GAAeA,OAAf;AACA,QAAMG,GAAG,GAAG,IAAIL,OAAJ,WAAeE,OAAO,CAACI,QAAvB,gBAAqCJ,OAAO,CAACK,IAA7C,cAAqDL,OAAO,CAACM,IAA7D,EAAZ;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACA,SAAKC,SAAL,GAAiB;AAAEC,MAAAA,QAAQ,EAAE,CAACT,OAAD;AAAZ,KAAjB;AACA,SAAKU,MAAL,GAAc,KAAKR,OAAL,CAAaS,GAAb,CAAiBX,OAAjB,EAA0BH,GAA1B,EAA+B;AAACM,MAAAA,GAAG,EAAHA;AAAD,KAA/B,CAAd;AACD;;;;kCAEa;AAAA;;AACZ,WAAKD,OAAL,CAAaU,WAAb,CAAyB,KAAKJ,SAA9B,EAAyCK,IAAzC,CAA8C,YAAM;AAChD,QAAA,KAAI,CAACN,cAAL,GAAsB,KAAI,CAACL,OAAL,CAAaY,QAAb,CAAsBL,QAAtB,CAA+BM,IAA/B,CAAoC,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,UAAF,KAAiB,KAArB;AAAA,SAArC,CAAtB;AAEH,OAHD,EAGGC,KAHH,CAGS,UAAAC,KAAK,EAAI;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACH,OALD;AAMD;;;;;;SAlBkBpB,a;;AAqBrBA,aAAa,CAACsB,SAAd,CAAwBC,OAAxB,GAAkC,YAAM;AAAC,SAAO,MAAP;AAAc,CAAvD","sourcesContent":["import ScatterJS from \"scatterjs-core\";\nimport ScatterEOS from \"scatterjs-plugin-eosjs2\";\nimport { Api, JsonRpc } from \"eosjs\";\n\nexport default class ScatterBridge {\n  constructor(network) {\n    ScatterJS.plugins(new ScatterEOS());\n    this.scatter = ScatterJS.scatter;\n    this.network = network;\n    const rpc = new JsonRpc(`${network.protocol}://${network.host}:${network.port}`);\n    this.currentAccount = null;\n    this.reqFields = { accounts: [network] };\n    this.eosApi = this.scatter.eos(network, Api, {rpc});\n  }\n\n  getIdentity() {\n    this.scatter.getIdentity(this.reqFields).then(() => {\n        this.currentAccount = this.scatter.identity.accounts.find(x => x.blockchain === \"eos\");\n        \n    }).catch(error => {\n        console.error(\"ERROR:\", error);\n    });\n  }\n}\n\nScatterBridge.prototype.connect = () => {return \"test\"};\n\n"]},"metadata":{},"sourceType":"module"}